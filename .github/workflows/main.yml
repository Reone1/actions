name: Cypress Tests

on: pull_request

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # and run all Cypress tests 
      - name: next install
        run: npm i next@canary
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          start: npm run dev
          tag: ${{ github.event_name }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
  build:
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Docker build & Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.event.number }}, ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Steps represent a sequence of tasks that will be executed as part of the job
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASES }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE}}:latest
            docker stop nextjs
            docker run --rm --name nextjs -dp 80:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE}}:latest